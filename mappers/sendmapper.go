package mappers

import (
	"fmt"

	"BotStocksScrapper/entity"
)

func StockInfoToStringMsg(stock entity.StockInfo) string {
	answerPreview := fmt.Sprintf("üî¥$%s %f%% %f\n", stock.Stock.Ticker, stock.VolumeChange, stock.Volume)
	answerDescr := "–ê–Ω–æ–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –Ω–∞ "
	if stock.StockMove == entity.Sale {
		answerDescr += "–ø—Ä–æ–¥–∞–∂—É"
	} else {
		answerDescr += "–ø–æ–∫—É–ø–∫—É"
	}

	answerBody := fmt.Sprintf("–¶–µ–Ω–∞: %f‚ÇΩ\n", stock.Stock.Price)
	answerBody += fmt.Sprintf("–û–±—ä–µ–º: %f[%d –ª–æ—Ç–æ–≤]\n", stock.Volume, stock.NumberLots)
	answerBody += fmt.Sprintf("–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞ –æ–±—ä–µ–º–µ: %f%%\n", stock.VolumeChange)
	if stock.StockMove == entity.Sale {
		answerBody += fmt.Sprintf("–¢–∏–ø: –ø—Ä–æ–¥–∞–∂–∞\n")
	} else {
		answerDescr += fmt.Sprintf("–¢–∏–ø: –ø–æ–∫—É–ø–∫–∞\n")
	}

	dayStatistic := fmt.Sprintf("–ò—Ç–æ–≥–æ –∑–∞ –¥–µ–Ω—å:\n")
	dayStatistic += fmt.Sprintf("–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã: %s%%\n", stock.PerDayPriceChange)
	dayStatistic += fmt.Sprintf("–ü–æ–∫—É–ø–∫–∏: %f%%, %f ‚ÇΩ\n", stock.PerDaySalesPercent, stock.PerDaySalesVolume)
	dayStatistic += fmt.Sprintf("–ü—Ä–æ–¥–∞–∂–∏: %f%%, %f ‚ÇΩ\n", stock.PerDayBuysPercent, stock.PerDayBuysVolume)

	answer := answerPreview + answerDescr + answerBody + dayStatistic
	return answer
}
